{"version":3,"sources":["routes.js","components/Nav.js","components/HomeForm.js","Pages/main/Home.js","components/main/AboutForm.js","components/FooterForm.js","Pages/main/About.js","components/post/PostPagination.js","components/main/PostForm.js","Pages/main/Post.js","components/main/PortfoiloForm.js","middleware.js","Pages/main/Portfolio.js","components/post/PostingForm.js","Pages/post/PostWriting.js","components/post/PostDetailForm.js","Pages/post/PostDetail.js","components/login/RegisterForm.js","Pages/login/Register.js","Pages/main/NotFound.js","components/login/LoginForm.js","Pages/login/Login.js","components/post/PostEditForm.js","Pages/post/PostEdit.js","components/port/PortWritingForm.js","Pages/portfolio/PortWriting.js","components/port/PortDetailForm.js","Pages/portfolio/PortDetail.js","components/port/PortEditForm.js","Pages/portfolio/PortEdit.js","components/main/ContactForm.js","Pages/main/Contact.js","App.js","serviceWorker.js","modules/reducer.js","index.js","image/3.jpg"],"names":["routes","home","portfolio","post","about","me","admin","register","login","postwriting","postdetail","portwriting","portdetail","Nav","userId","onClick","width","onChange","username","onClickNav","document","querySelector","classList","toggle","to","className","HomeForm","src","img","alt","href","target","Home","Arrow","AboutForm","settings","dots","infinite","speed","autoplay","autoplaySpeed","slidesToShow","slidesToScroll","nextArrow","prevArrow","data-tip","data-for","id","place","effect","data-set","year","Date","getFullYear","FooterForm","About","PostPagination","handleChange","postLength","select","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","pageClassName","activeClassName","forcePage","PostForm","postObj","loading","map","p","key","_id","title","updated","dangerouslySetInnerHTML","__html","description","createDate","Post","location","history","useState","query","search","page","setPage","selecting","setSelect","creator","setPost","setPostLenght","setLoading","useEffect","a","Axios","get","then","res","data","getPagePost","getElementById","scrollIntoView","behavior","console","log","pagePost","getPost","parseInt","split","posting","Math","ceil","length","AllPost","e","selected","push","PortfolioForm","port","imgUrl","category","registerCheck","err","url","message","response","undefined","alert","useUserId","setUserId","getUserId","useGetPost","setpost","useGetPort","setport","getPort","modules","toolbar","font","size","list","align","color","background","formats","Portfolio","ports","PostingForm","onSubmit","onValue","type","name","placeholder","theme","value","PostWriting","preventDefault","axiosData","content","delta","source","editor","text","getHTML","PostDetailForm","window","back","PostDetail","useParams","del","setDel","deletePost","RegisterForm","min","required","Register","password","password2","email","setRegister","user","setUser","adminRegister","NotFound","AdminLoginForm","Login","setLogin","postLogin","PostEditForm","defaultValue","PostEdit","updatePost","setUpdatePost","update","setUpdate","PortWritingForm","onImage","multiple","PortWriting","setPort","image","setImage","files","formData","FormData","i","append","JSON","stringify","headers","postPortFolio","PortDetailForm","dotsClass","customPaging","index","PortDetail","PortEditForm","PortEdit","setUpdated","updatePort","ContactForm","Contact","dotenv","config","App","setWidth","handleWidth","useCallback","innerWidth","addEventListener","getUser","logout","setLogout","userLogout","exact","path","component","Boolean","hostname","match","green","createAction","red","blue","reducer","handleActions","state","action","backgroundColor","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.b3c5897f.chunk.js","sourcesContent":["//  basic path\nconst HOME = \"/\";\nconst PORTFOLIO = \"/portfolio\";\nconst POST = \"/post\";\nconst ABOUT = \"/about\";\nconst ME = \"/me\";\nconst REGISTER = \"/register\";\nconst LOGIN = \"/login\";\n\n// 관리자\nconst ADMIN = \"/admin\";\n// posting\nconst POSTWRITING = \"/postwriting\";\nconst POSTDETAIL = \"/postdetail\";\n\n// port\nconst PORTWRITING = \"/portwriting\";\nconst PORTDETAIL = \"/portdetail\";\nconst routes = {\n  home: HOME,\n  portfolio: PORTFOLIO,\n  post: POST,\n  about: ABOUT,\n  me: ME,\n  admin: ADMIN,\n  register: REGISTER,\n  login: LOGIN,\n  postwriting: POSTWRITING,\n  postdetail: POSTDETAIL,\n  portwriting: PORTWRITING,\n  portdetail: PORTDETAIL,\n};\n\nexport default routes;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"../routes\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport \"./Nav.scss\";\n\nconst Nav = ({ userId, onClick, width, onChange, admin }) => {\n  const { username } = userId;\n  const onClickNav = () => {\n    const menu = document.querySelector(\".header__menu\");\n    menu.classList.toggle(\"active\");\n  };\n\n  return (\n    <>\n      <header onChange={onChange}>\n        <li>\n          <Link to={routes.home} className=\"header__logo\">\n            Think_Tank\n          </Link>\n        </li>\n        <nav className=\"header__menu\">\n          <Link to={routes.home} className=\"menu__items\" onClick={onClickNav}>\n            <li>Home</li>\n          </Link>\n          <Link\n            to={routes.portfolio}\n            className=\"menu__items\"\n            onClick={onClickNav}\n          >\n            <li>Portfolio</li>\n          </Link>\n          <Link to={routes.post} className=\"menu__items\" onClick={onClickNav}>\n            <li>Post</li>\n          </Link>\n          <Link to={routes.about} className=\"menu__items\" onClick={onClickNav}>\n            <li>About Me</li>\n          </Link>\n          {!username ? (\n            <>\n              <Link\n                to={routes.login}\n                className=\"menu__items\"\n                onClick={onClickNav}\n              >\n                <li>Login</li>\n              </Link>\n              <Link\n                to={routes.register}\n                className=\"menu__items\"\n                onClick={onClickNav}\n              >\n                <li>Register</li>\n              </Link>\n            </>\n          ) : (\n            <>\n              <li className=\"menu__items\" onClick={onClick}>\n                Logout\n              </li>\n              {!admin ? (\n                <li className=\"username\">{username}님 어서오세요</li>\n              ) : (\n                <li className=\"username\">\n                  관리자님 어서오세요 아이디는 {username}입니다.\n                </li>\n              )}\n            </>\n          )}\n        </nav>\n        {768 >= width ? (\n          <li className=\"header__hamburger\" onClick={onClickNav}>\n            <GiHamburgerMenu />\n          </li>\n        ) : (\n          <> </>\n        )}\n      </header>\n    </>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport \"./HomeForm.scss\";\nimport img from \"../image/3.jpg\";\nimport { Link } from \"react-router-dom\";\n\nconst HomeForm = () => {\n  return (\n    <>\n      <div className=\"main\">\n        <img src={img} alt=\"home\"></img>\n        <h2 className=\"home__title\">Create New EveryDay!</h2>\n        <h4 className=\"home__desc\">\n          There have to be reasons that you get up in the morning and you want\n          to live.\n        </h4>\n        <button>\n          <a href=\"https://github.com/chkim116\" target=\"blank\">\n            View More My GitHub\n          </a>\n        </button>\n        <button>\n          <Link to=\"/contact\">Contact Me</Link>\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default HomeForm;\n","import React from \"react\";\nimport HomeForm from \"../../components/HomeForm\";\n\nconst Home = () => {\n  return <HomeForm></HomeForm>;\n};\n\nexport default Home;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from \"react\";\nimport \"./AboutForm.scss\";\nimport {\n  SiHtml5,\n  SiCss3,\n  SiJavascript,\n  SiReact,\n  SiBabel,\n} from \"react-icons/si\";\nimport { FaNodeJs, FaSass } from \"react-icons/fa\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport ReactTooltip from \"react-tooltip\";\n\nconst Arrow = () => {\n  return <> </>;\n};\n\nconst AboutForm = () => {\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 1500,\n    autoplay: true,\n    autoplaySpeed: 3500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    nextArrow: <Arrow />,\n    prevArrow: <Arrow />,\n  };\n\n  return (\n    <>\n      <Slider {...settings} className=\"about\">\n        <div className=\"slide__one\">\n          <h1>For Web & Mobile</h1>\n          <h3>Our mission is to Design and develop the Best!</h3>\n        </div>\n        <div className=\"slide__two\">\n          <h1>Not Afraid</h1>\n          <h3>Every day new, Every day Different Tech</h3>\n        </div>\n        <div className=\"slide__three\">\n          <h1>Serendipity</h1>\n          <h3>New Creation, Unexpected Discovery</h3>\n        </div>\n      </Slider>\n\n      <div className=\"about__desc\">\n        <h1>About Me </h1>\n        <div className=\"about__icons\">\n          <div className=\"about__stack\">\n            <h5>Stack</h5>\n\n            <a data-tip data-for=\"html\">\n              <SiHtml5 className=\"about__stack-icon html\" />\n            </a>\n            <ReactTooltip id=\"html\" place=\"left\" effect=\"float\">\n              <h2>HTML</h2>\n              <ul>\n                <li>시맨틱 태그에 대한 이해</li>\n                <li>Canvas 등 다양한 태그 경험</li>\n              </ul>\n            </ReactTooltip>\n\n            <a data-tip data-for=\"css\">\n              <SiCss3 className=\"about__stack-icon css\" />\n            </a>\n            <ReactTooltip id=\"css\" place=\"top\" effect=\"float\">\n              <h2>CSS</h2>\n              <ul>\n                <li>라이브러리 없는 CSS 활용</li>\n                <li>flex, grid의 박스 모델</li>\n                <li>애니메이션, 트렌지션 기능</li>\n                <li>미디어 쿼리</li>\n              </ul>\n            </ReactTooltip>\n\n            <a data-tip data-for=\"js\">\n              <SiJavascript className=\"about__stack-icon js\" />\n            </a>\n            <ReactTooltip id=\"js\" place=\"top\" effect=\"float\">\n              <h2>JAVASCRIPT</h2>\n              <ul>\n                <li>Vanila JS 활용</li>\n                <li>DOM 요소</li>\n                <li>ES6 문법 숙지</li>\n                <li>로컬스토리지</li>\n              </ul>\n            </ReactTooltip>\n\n            <a data-tip data-for=\"node\">\n              <FaNodeJs className=\"about__stack-icon node\" />\n            </a>\n            <ReactTooltip id=\"node\" place=\"top\" effect=\"float\">\n              <h2>NODE JS</h2>\n              <ul>\n                <li>REST API</li>\n                <li>CRUD 구현</li>\n                <li>뷰 템플릿 엔진 PUG</li>\n                <li>REACT 연동</li>\n                <li>몽고DB 연동</li>\n              </ul>\n            </ReactTooltip>\n          </div>\n\n          <h5>Library Stack</h5>\n          <div className=\"about__stack-library\">\n            <a data-tip data-for=\"react\">\n              <SiReact className=\"about__stack-icon react\" />\n            </a>\n            <ReactTooltip id=\"react\" place=\"top\" effect=\"float\">\n              <h2>REACT</h2>\n              <ul>\n                <li>리액트 훅 등 함수형 컴포넌트 기능 숙지</li>\n                <li>클래스형 컴포넌트에 대한 이해</li>\n                <li>AXIOS 등을 활용한 AJAX</li>\n                <li>NODE JS 연동</li>\n              </ul>\n            </ReactTooltip>\n          </div>\n\n          <h5>Framwork Stack</h5>\n          <div className=\"about__stack-frame\">\n            <a data-tip data-for=\"sass\">\n              <FaSass className=\"about__stack-icon sass\" data-set=\"sass\" />\n            </a>\n            <ReactTooltip id=\"sass\" place=\"top\" effect=\"float\">\n              <h2>SASS</h2>\n              <ul>\n                <li>REACT에서 활용</li>\n                <li>NODE JS-PUG에서 활용</li>\n              </ul>\n            </ReactTooltip>\n          </div>\n          <h5>Utilities Stack</h5>\n          <div className=\"about__stack-util\">\n            <a data-tip data-for=\"babel\">\n              <SiBabel className=\"about__stack-icon babel\" data-set=\"babel\" />\n            </a>\n            <ReactTooltip id=\"babel\" place=\"top\" effect=\"float\">\n              <h2>BABEL</h2>\n              <ul>\n                <li>바벨 설정</li>\n                <li>최신 문법 사용</li>\n              </ul>\n            </ReactTooltip>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AboutForm;\n","import React from \"react\";\nimport \"./FooterForm.scss\";\n\nconst year = new Date().getFullYear();\n\nconst FooterForm = () => {\n  return (\n    <footer>\n      <div>\n        <h2> Think_Tank </h2>\n        <small>Copyright ©{year}</small>\n      </div>\n    </footer>\n  );\n};\n\nexport default FooterForm;\n","import React from \"react\";\nimport AboutForm from \"../../components/main/AboutForm\";\nimport FooterForm from \"../../components/FooterForm\";\nimport { Helmet } from \"react-helmet-async\";\n\nconst About = () => {\n  return (\n    <>\n      <Helmet>\n        <title>My Blog | About</title>\n      </Helmet>\n      <AboutForm />\n      <FooterForm />\n    </>\n  );\n};\n\nexport default About;\n","import React from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nexport const PostPagination = ({ handleChange, postLength, select }) => {\r\n  return (\r\n    <>\r\n      <ReactPaginate\r\n        previousLabel={\"이전\"}\r\n        nextLabel={\"다음\"}\r\n        breakLabel={\"...\"}\r\n        breakClassName={\"break-me\"}\r\n        pageCount={postLength}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={5}\r\n        onPageChange={handleChange}\r\n        containerClassName={\"pagination\"}\r\n        subContainerClassName={\"pages pagination\"}\r\n        pageClassName={\"page-btn\"}\r\n        activeClassName={\"active\"}\r\n        forcePage={select}\r\n      ></ReactPaginate>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./PostForm.scss\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport { PostPagination } from \"../post/PostPagination\";\n\nconst PostForm = ({\n  select,\n  postObj,\n  loading,\n  onClick,\n  handleChange,\n  postLength,\n}) => {\n  const { post } = postObj;\n  return (\n    <>\n      {loading ? (\n        <div className=\"post__wrap\">\n          <div className=\"post\">\n            <span className=\"btn post-btn\" onClick={onClick}>\n              <Link to={routes.postwriting}>Post</Link>\n            </span>\n          </div>\n          <div className=\"post__form\">\n            {post.map((p) => (\n              <div className=\"post__form-type\" key={p._id}>\n                <Link to={`/postdetail/${p._id}`}>\n                  <h3 className=\"post__form-title\">\n                    {p.title}\n                    <small className=\"updated\">{p.updated}</small>\n                  </h3>\n                  <div className=\"post__form-desc\">\n                    <div\n                      className=\"ql-editor\"\n                      dangerouslySetInnerHTML={{ __html: p.description }}\n                    ></div>\n                    {/* {p.description.length > 300\n                      ? p.description.slice(0, 150).concat(\"  ...더보기\")\n                      : p.description} */}\n                  </div>\n                  <p className=\"post__form-date\">\n                    <small>{p.createDate}</small>\n                  </p>\n                </Link>\n              </div>\n            ))}\n          </div>\n          <div className=\"post__form-page\">\n            <PostPagination\n              handleChange={handleChange}\n              postLength={postLength}\n              select={select}\n            ></PostPagination>\n          </div>\n        </div>\n      ) : (\n        <h1 className=\"loading__title\">글을 불러오는 중입니다.</h1>\n      )}\n    </>\n  );\n};\n\nexport default PostForm;\n","import React, { useState, useEffect } from \"react\";\nimport FooterForm from \"../../components/FooterForm\";\nimport PostForm from \"../../components/main/PostForm\";\nimport Axios from \"axios\";\nimport { Helmet } from \"react-helmet-async\";\n\nconst Post = ({ location, history }) => {\n  // url에 따른 포스트 호출\n  const [page, setPage] = useState({ query: location.search });\n  const { query } = page;\n\n  // 눌렀던 번호를 쿼리에 맞춰 설정\n  const [select, setSelect] = useState({ selecting: 0 });\n  const { selecting } = select;\n  // query url에 따른 보여주는 포스트\n  const [post, setPost] = useState({\n    title: \"\",\n    description: \"\",\n    updated: \"\",\n    creator: \"\",\n  });\n\n  // 등록된 포스트의 총 길이 ( limit 5 )\n  const [postLength, setPostLenght] = useState();\n  const [loading, setLoading] = useState(false);\n\n  // get post query 부분만\n  const getPost = (query) => {\n    setLoading(false);\n    const pagePost = async () => {\n      try {\n        const getPagePost = await Axios.get(\n          query ? `/api${query}` : \"/api\"\n        ).then((res) => res.data);\n        setPost(getPagePost);\n        setLoading(true);\n        document.getElementById(\"root\").scrollIntoView({ behavior: \"smooth\" });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    pagePost();\n  };\n\n  // get all post / 5, 페이지의 수를 파악하기 위해 불러옴\n  const getAllPost = () => {\n    const AllPost = async () => {\n      try {\n        const posting = await Axios.get(\"/api/all\").then((res) => res.data);\n        setPostLenght(Math.ceil(posting.length / 3));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    AllPost();\n  };\n\n  useEffect(() => {\n    getPost(query);\n    setSelect({ selecting: query ? parseInt(query.split(\"=\")[1] - 1) : 0 });\n  }, [query]);\n\n  useEffect(() => {\n    getAllPost();\n  }, []);\n\n  const handleChange = (e) => {\n    const { selected } = e;\n    setPage({ query: `?page=${selected + 1}` });\n    history.push(`/post?page=${selected + 1}`);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>My Blog | Post</title>\n      </Helmet>\n      <PostForm\n        postObj={{ post }}\n        loading={loading}\n        postLength={postLength}\n        page={page}\n        handleChange={handleChange}\n        select={selecting}\n      />\n      <FooterForm />\n    </>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport \"./PortfolioForm.scss\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport { BsHammer } from \"react-icons/bs\";\n\nconst PortfolioForm = ({ port, admin }) => {\n  return (\n    <>\n      {admin && (\n        <Link to={routes.portwriting} className=\"post\">\n          글 작성\n        </Link>\n      )}\n      <div className=\"contents\">\n        {port.map((p, key) => (\n          <div className=\"article__post\" key={key}>\n            <Link to={`/portdetail/${p._id}`}>\n              <img className=\"post_thumbnail\" src={p.imgUrl[0]} alt=\"img\"></img>\n              <h3 className=\"post__title\">{p.title}</h3>\n              <p className=\"post__desc\">{p.description}</p>\n              <h4>\n                <BsHammer />\n                {p.createDate}\n              </h4>\n              <small>Categories: {p.category}</small>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default PortfolioForm;\n","import { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nexport function registerCheck(err, url, { history }) {\r\n  const {\r\n    data: { message },\r\n  } = err.response;\r\n  if (message !== undefined) {\r\n    history.push(`/${url}`);\r\n    alert(`${message}`);\r\n  }\r\n}\r\n\r\n// id, username hooks\r\nexport const useUserId = (url) => {\r\n  const [userId, setUserId] = useState({\r\n    id: \"\",\r\n    username: \"\",\r\n    admin: false,\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getUserId = async () => {\r\n    try {\r\n      await Axios.get(url).then((res) => setUserId(res.data));\r\n      setLoading(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getUserId();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return { userId, loading };\r\n};\r\n\r\n// get Post Hooks\r\nexport const useGetPost = (url) => {\r\n  const [post, setpost] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    updated: \"\",\r\n    creator: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getPost = async () => {\r\n    try {\r\n      await Axios.get(url).then((res) => setpost(res.data));\r\n      setLoading(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPost();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return { post, loading };\r\n};\r\n\r\nexport const useGetPort = (url) => {\r\n  const [port, setport] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    imgUrl: [],\r\n    createDate: \"\",\r\n    category: \"\",\r\n    creator: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getPort = async () => {\r\n    try {\r\n      await Axios.get(url).then((res) => setport(res.data));\r\n      setLoading(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPort();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return { port, loading };\r\n};\r\n\r\n// react-quill\r\n\r\nexport const modules = {\r\n  toolbar: [\r\n    [{ font: [] }],\r\n    [{ size: [\"small\", false, \"large\", \"huge\"] }],\r\n    [\"bold\", \"italic\", \"underline\"],\r\n    [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n    [{ align: [] }],\r\n    [{ color: [] }, { background: [] }],\r\n    [\"link\", \"image\", \"video\"],\r\n    [\"clean\"],\r\n  ],\r\n};\r\n\r\nexport const formats = [\r\n  \"font\",\r\n  \"size\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"align\",\r\n  \"color\",\r\n  \"background\",\r\n  \"link\",\r\n  \"image\",\r\n  \"video\",\r\n];\r\n","import React from \"react\";\nimport PortfolioForm from \"../../components/main/PortfoiloForm\";\nimport FooterForm from \"../../components/FooterForm\";\nimport { useGetPort, useUserId } from \"../../middleware\";\nimport { Helmet } from \"react-helmet-async\";\n\nconst Portfolio = () => {\n  const ports = useGetPort(\"/port\");\n  const { port, loading } = ports;\n  const getUser = useUserId(\"/auth\");\n  const { userId } = getUser;\n  const { admin } = userId;\n  return (\n    <>\n      <Helmet>\n        <title>My Blog | PortFolio</title>\n      </Helmet>\n      {loading ? (\n        <>\n          <PortfolioForm port={port} admin={admin}></PortfolioForm>\n          <FooterForm />\n        </>\n      ) : (\n        <div className=\"loading__title\">로딩 중</div>\n      )}\n    </>\n  );\n};\n\nexport default Portfolio;\n","import React, { useEffect, useState } from \"react\";\nimport \"./PostingForm.scss\";\nimport ReactQuill from \"react-quill\";\n\nimport { modules, formats } from \"../../middleware\";\n\nconst PostingForm = ({ onSubmit, onChange, onValue }) => {\n  const [loading, setLoading] = useState(\"\");\n  useEffect(() => {\n    setLoading(true);\n  }, []);\n\n  if (!loading) {\n    return <div className=\"loading__title\"> 로딩중</div>;\n  }\n\n  return (\n    <>\n      <form className=\"posting__form\" onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"title\"\n          onChange={onChange}\n        ></input>\n        <ReactQuill\n          theme=\"snow\"\n          modules={modules}\n          formats={formats}\n          name=\"description\"\n          placeholder=\"description\"\n          onChange={onValue}\n        ></ReactQuill>\n        <input className=\"form__submit\" type=\"submit\" value=\"UPLOAD\"></input>\n      </form>\n    </>\n  );\n};\n\nexport default PostingForm;\n","import React, { useState, useEffect } from \"react\";\nimport PostingForm from \"../../components/post/PostingForm\";\nimport Axios from \"axios\";\nimport { Helmet } from \"react-helmet-async\";\n\nconst PostWriting = ({ history }) => {\n  const initialState = {\n    title: \"\",\n    description: \"\",\n    updated: \"\",\n  };\n\n  const [post, setPost] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const { title, description, updated } = post;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setPost({ ...post });\n    const axiosData = async () => {\n      try {\n        await Axios.post(\"/api/post\", {\n          title,\n          description,\n          updated,\n        });\n        setLoading(true);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    axiosData();\n  };\n\n  const onChange = (e) => {\n    const { value, name } = e.target;\n    setPost({\n      ...post,\n      [name]: value,\n    });\n  };\n\n  const onValue = (content, delta, source, editor) => {\n    const text = editor.getHTML();\n    setPost({\n      ...post,\n      description: text,\n    });\n  };\n\n  useEffect(() => {\n    if (loading) {\n      history.push(\"/post\");\n    }\n  });\n\n  return (\n    <>\n      <Helmet>\n        <title>My Blog | 글 작성</title>\n      </Helmet>\n      <PostingForm\n        onSubmit={onSubmit}\n        onChange={onChange}\n        title={title}\n        onValue={onValue}\n        description={description}\n      ></PostingForm>\n    </>\n  );\n};\n\nexport default PostWriting;\n","import React from \"react\";\nimport \"./PostDetailForm.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst PostDetailForm = ({ postObj, loading, onClick, userId }) => {\n  const { title, description, _id, createDate, creator } = postObj;\n  if (!loading) {\n    return <div className=\"loading__title\">글 화면으로 가는 중</div>;\n  }\n\n  return (\n    <>\n      <div className=\"post__detail\" key={_id}>\n        <div\n          className=\"previous\"\n          onClick={() => {\n            window.history.back();\n          }}\n        >\n          뒤로가기\n        </div>\n\n        <div className=\"post__btn\">\n          {userId === creator && (\n            <>\n              <span className=\"btn\">\n                <Link to={`/edit/${_id}`}>Edit</Link>\n              </span>\n              <span className=\"btn\" onClick={onClick}>\n                Delete\n              </span>\n            </>\n          )}\n        </div>\n        <h2 className=\"post__detail-title\">{title}</h2>\n        <div className=\"post__detail-desc\">\n          <div\n            className=\"ql-editor\"\n            dangerouslySetInnerHTML={{ __html: description }}\n          ></div>\n          {/* {description.split(\"\\n\").map((text, key) => {\n            return (\n              <span key={key}>\n                {text}\n                <br />\n              </span>\n            );\n          })} */}\n        </div>\n        <p className=\"post__detail-date\">\n          <small>Uploaded: {createDate}</small>\n        </p>\n      </div>\n    </>\n  );\n};\n\n// axios get ('/postdetail/(id))\nexport default PostDetailForm;\n","import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport PostDetailForm from \"../../components/post/PostDetailForm\";\nimport { useUserId, useGetPost } from \"../../middleware\";\nimport { Helmet } from \"react-helmet-async\";\n\nconst PostDetail = ({ history }) => {\n  const { id } = useParams();\n  // get Id\n  const usersId = useUserId(\"/auth\");\n  const {\n    userId: { id: userId },\n  } = usersId;\n\n  // get Post Detail\n  const getPost = useGetPost(`/api/${id}`);\n  const { post, loading } = getPost;\n\n  //  del post\n\n  const [del, setDel] = useState(false);\n\n  const onClick = () => {\n    const deletePost = async () => {\n      await Axios.get(`/api/del/${id}`).then((res) => setDel(res.data));\n    };\n    deletePost();\n  };\n\n  useEffect(() => {\n    if (del) {\n      history.push(\"/post\");\n    }\n  });\n\n  return (\n    <>\n      <Helmet>\n        <title>My Blog | {post.title}</title>\n      </Helmet>\n      <PostDetailForm\n        postObj={post}\n        loading={loading}\n        onClick={onClick}\n        userId={userId}\n      />\n    </>\n  );\n};\n\nexport default PostDetail;\n","import React from \"react\";\nimport \"./RegisterForm.scss\";\n\nconst RegisterForm = ({ onChange, onSubmit }) => {\n  return (\n    <>\n      <form className=\"register__form\" onChange={onChange} onSubmit={onSubmit}>\n        <h2 className=\"register__title\">회원 가입</h2>\n        <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"아이디 또는 이름\"\n          min=\"3\"\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          required\n          min=\"6\"\n          placeholder=\"6자리 이상의 비밀번호\"\n        />\n        <input\n          type=\"password\"\n          name=\"password2\"\n          required\n          placeholder=\"비밀번호 확인\"\n        />\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"ex) xxxxxxx@xxxx.com\"\n          required\n        />\n        <input className=\"form__submit\" type=\"submit\" value=\"가입완료\" />\n      </form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import React, { useState, useEffect } from \"react\";\nimport RegisterForm from \"../../components/login/RegisterForm\";\nimport Axios from \"axios\";\nimport { registerCheck } from \"../../middleware\";\nimport { Helmet } from \"react-helmet-async\";\n\nconst Register = ({ history }) => {\n  const initialState = {\n    username: \"\",\n    password: \"\",\n    password2: \"\",\n    email: \"\",\n  };\n\n  const [register, setRegister] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState(false);\n  const { username, password, password2, email } = register;\n\n  const onSubmit = (e) => {\n    setLoading(true);\n    e.preventDefault();\n    setRegister({ ...register });\n    const adminRegister = async () => {\n      try {\n        await Axios.post(\"/auth/register\", {\n          username,\n          password,\n          password2,\n          email,\n        }).then((res) => setUser(res.data));\n      } catch (err) {\n        console.log(err);\n        const REGISTER = \"register\";\n        registerCheck(err, REGISTER, { history });\n        setLoading(false);\n      }\n    };\n    adminRegister();\n  };\n\n  useEffect(() => {\n    if (user) {\n      setLoading(false);\n      window.location.href = \"/\";\n    }\n\n    return () => {\n      setUser(false);\n    };\n  }, [user]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setRegister({ ...register, [name]: value });\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>My Blog | Register</title>\n      </Helmet>\n\n      {loading && <div className=\"loading__bar\">회원가입 중 입니다.</div>}\n      <RegisterForm onChange={onChange} onSubmit={onSubmit}></RegisterForm>\n    </>\n  );\n};\n\nexport default Register;\n","import React from \"react\";\r\nimport \"../../ErrorPage.scss\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>My Blog | Not Found</title>\r\n      </Helmet>\r\n      <h3 className=\"error__title\">Not Found!</h3>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\nimport \"./LoginForm.scss\";\n\nconst AdminLoginForm = ({ onChange, onSubmit }) => {\n  return (\n    <>\n      <form className=\"admin__form\" onSubmit={onSubmit} onChange={onChange}>\n        <h2>로그인</h2>\n        <input type=\"text\" name=\"username\" placeholder=\"아이디\" />\n        <input\n          type=\"password\"\n          name=\"password\"\n          min=\"6\"\n          placeholder=\"6자리 이상의 비밀번호\"\n        />\n        <input className=\"form__submit\" type=\"submit\" value=\"로그인\" />\n      </form>\n    </>\n  );\n};\n\nexport default AdminLoginForm;\n","import React, { useState, useEffect } from \"react\";\nimport LoginForm from \"../../components/login/LoginForm\";\nimport Axios from \"axios\";\nimport { registerCheck } from \"../../middleware\";\nimport { Helmet } from \"react-helmet-async\";\n\nconst Login = ({ history }) => {\n  const initialState = {\n    username: \"\",\n    password: \"\",\n  };\n  const [login, setLogin] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState(false);\n  const { username, password } = login;\n\n  const onSubmit = (e) => {\n    setLoading(true);\n    e.preventDefault();\n    setLogin({ ...login });\n    const postLogin = async () => {\n      try {\n        await Axios.post(\"/auth/login\", {\n          username,\n          password,\n        });\n        setUser(true);\n      } catch (err) {\n        const LOGIN = \"login\";\n        registerCheck(err, LOGIN, { history });\n        setLoading(false);\n      }\n    };\n    postLogin();\n  };\n\n  useEffect(() => {\n    if (user) {\n      window.location.href = \"/\";\n      setLoading(false);\n    }\n  }, [user]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setLogin({ ...login, [name]: value });\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>My Blog | Login</title>\n      </Helmet>\n\n      {loading && <div className=\"loading__bar\">로그인 중입니다.</div>}\n      <LoginForm\n        user={user}\n        onSubmit={onSubmit}\n        onChange={onChange}\n      ></LoginForm>\n    </>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\r\nimport \"./PostingForm.scss\";\r\nimport ReactQuill from \"react-quill\";\r\nimport { modules, formats } from \"../../middleware\";\r\n\r\nconst PostEditForm = ({ post, loading, onChange, onSubmit, onValue }) => {\r\n  const { title, description } = post;\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <form className=\"posting__form\" onSubmit={onSubmit} onChange={onChange}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            defaultValue={title}\r\n            placeholder=\"title\"\r\n          ></input>\r\n          <ReactQuill\r\n            theme=\"snow\"\r\n            modules={modules}\r\n            formats={formats}\r\n            name=\"description\"\r\n            defaultValue={description}\r\n            placeholder=\"description\"\r\n            onChange={onValue}\r\n          ></ReactQuill>\r\n          <input className=\"form__submit\" type=\"submit\" value=\"UPDATE\"></input>\r\n        </form>\r\n      ) : (\r\n        <div className=\"loading__title\">디테일 수정화면으로 가는 중</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostEditForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PostEditForm from \"../../components/post/PostEditForm\";\r\nimport Axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGetPost } from \"../../middleware\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nconst PostEdit = ({ history }) => {\r\n  const { id } = useParams();\r\n\r\n  //   get post\r\n  const getPost = useGetPost(`/api/${id}`);\r\n  const { post } = getPost;\r\n\r\n  const [updatePost, setUpdatePost] = useState(\"\");\r\n  const [update, setUpdate] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // get previous post value\r\n  useEffect(() => {\r\n    const getPost = async () => {\r\n      try {\r\n        await Axios.get(`/api/${id}`).then((res) => setUpdatePost(res.data));\r\n        setLoading(true);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getPost();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // update Post\r\n  const { title, description, updated } = updatePost;\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setUpdatePost({ ...updatePost });\r\n    const axiosData = async () => {\r\n      try {\r\n        await Axios.post(`/api/edit/${id}`, {\r\n          title,\r\n          description,\r\n          updated,\r\n        }).then((res) => setUpdatePost({ ...updatePost }));\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      setUpdate(true);\r\n    };\r\n    axiosData();\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUpdatePost({\r\n      ...updatePost,\r\n      [name]: value,\r\n      updated: \"(수정됨)\",\r\n    });\r\n  };\r\n\r\n  const onValue = (content, delta, source, editor) => {\r\n    const text = editor.getHTML();\r\n    setUpdatePost({\r\n      ...updatePost,\r\n      description: text,\r\n      updated: \"(수정됨)\",\r\n    });\r\n  };\r\n\r\n  // if update go post page\r\n  useEffect(() => {\r\n    if (update) {\r\n      history.push(\"/post\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>My Blog | 수정 {post.title}</title>\r\n      </Helmet>\r\n      <PostEditForm\r\n        post={post}\r\n        loading={loading}\r\n        onSubmit={onSubmit}\r\n        onChange={onChange}\r\n        onValue={onValue}\r\n      ></PostEditForm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostEdit;\r\n","import React from \"react\";\r\nimport \"./PortWritingForm.scss\";\r\n\r\nexport const PortWritingForm = ({ onSubmit, onChange, onImage }) => {\r\n  return (\r\n    <>\r\n      <form className=\"port__form\" onChange={onChange} onSubmit={onSubmit}>\r\n        <input type=\"date\" name=\"createDate\"></input>\r\n        <input type=\"text\" name=\"title\" placeholder=\"title\"></input>\r\n        <textarea type=\"text\" name=\"description\" placeholder=\"description\" />\r\n        <input\r\n          type=\"file\"\r\n          name=\"imgUrl\"\r\n          id=\"imgUrl\"\r\n          multiple\r\n          onChange={onImage}\r\n        ></input>\r\n        <input\r\n          className=\"tags\"\r\n          type=\"text\"\r\n          name=\"category\"\r\n          placeholder=\"태그\"\r\n        ></input>\r\n        <input className=\"form__submit\" type=\"submit\" value=\"UPLOAD\"></input>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { PortWritingForm } from \"../../components/port/PortWritingForm\";\r\nimport Axios from \"axios\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nexport const PortWriting = ({ history }) => {\r\n  const initialState = {\r\n    title: \"\",\r\n    description: \"\",\r\n    createDate: \"\",\r\n    category: \"\",\r\n  };\r\n\r\n  const [port, setPort] = useState(initialState);\r\n  const [image, setImage] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const { title, description, createDate, category } = port;\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPort({ ...port, [name]: value, imgUrl: image });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const postPortFolio = async () => {\r\n      const formData = new FormData();\r\n      for (let i = 0; i < image.length; i++) {\r\n        formData.append(\"imgUrl\", image[i]);\r\n      }\r\n      formData.append(\r\n        \"value\",\r\n        JSON.stringify({ title, description, createDate, category })\r\n      );\r\n      try {\r\n        await Axios.post(\"/port/post\", formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        });\r\n        setLoading(true);\r\n      } catch (err) {\r\n        console.log(err);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    postPortFolio();\r\n  };\r\n\r\n  const onImage = (e) => {\r\n    const { files } = e.target;\r\n    setImage(files);\r\n    setPort({ ...port, imgUrl: files });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      history.push(\"/portfolio\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>My Blog | 글 작성</title>\r\n      </Helmet>\r\n      {loading && <div className=\"loading__bar\">로딩 중입니다.</div>}\r\n      <PortWritingForm\r\n        onChange={onChange}\r\n        onImage={onImage}\r\n        onSubmit={onSubmit}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { BsHammer } from \"react-icons/bs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./PortDetailForm.scss\";\r\nimport Slider from \"react-slick\";\r\n\r\nexport const PortDetailForm = ({ port, onClick, admin }) => {\r\n  const { title, description, imgUrl, createDate, category, _id } = port;\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    dotsClass: \"slick-dots slick-thumb\",\r\n    speed: 1500,\r\n    autoplay: true,\r\n    autoplaySpeed: 3500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    customPaging: function (i) {\r\n      return (\r\n        <a>\r\n          <img src={imgUrl[i]} alt=\"slide-btn\" />\r\n        </a>\r\n      );\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"port__detail\" key={_id}>\r\n        <div className=\"port__btn\">\r\n          {admin ? (\r\n            <>\r\n              <span className=\"btn\">\r\n                <Link to={`/portedit/${_id}`}>Edit</Link>\r\n              </span>\r\n              <span className=\"btn\" onClick={onClick}>\r\n                Delete\r\n              </span>\r\n            </>\r\n          ) : (\r\n            <> </>\r\n          )}\r\n        </div>\r\n        <h2 className=\"port__detail-title\">{title}</h2>\r\n        <div className=\"port__detail-desc\">\r\n          <Slider {...settings}>\r\n            {imgUrl.map((img, index) => (\r\n              <div key={index}>\r\n                <img src={img} alt=\"이미지\"></img>\r\n              </div>\r\n            ))}\r\n          </Slider>\r\n          {description.split(\"\\n\").map((text, key) => {\r\n            return (\r\n              <span key={key}>\r\n                {text}\r\n                <br />\r\n              </span>\r\n            );\r\n          })}\r\n        </div>\r\n        <p>\r\n          <BsHammer />\r\n          {createDate}\r\n        </p>\r\n        <small>Categories: {category}</small>\r\n        <p className=\"port__detail-date\">\r\n          <small>Upload By: Kim</small>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGetPort, useUserId } from \"../../middleware\";\r\nimport { PortDetailForm } from \"../../components/port/PortDetailForm\";\r\nimport Axios from \"axios\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nexport const PortDetail = ({ history }) => {\r\n  const { id } = useParams();\r\n\r\n  // get portfolio\r\n  const ports = useGetPort(`/port/${id}`);\r\n  const { port, loading } = ports;\r\n\r\n  // admin auth\r\n  const loggedUser = useUserId(\"/auth\");\r\n  const {\r\n    userId: { admin },\r\n  } = loggedUser;\r\n\r\n  //  delete auth\r\n\r\n  const [del, setDel] = useState(false);\r\n  const onClick = () => {\r\n    const deletePost = async () => {\r\n      await Axios.get(`/port/del/${id}`).then((res) => setDel(res.data));\r\n    };\r\n    deletePost();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (del) {\r\n      history.push(\"/portfolio\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>My Blog | {port.title}</title>\r\n      </Helmet>\r\n      {loading ? (\r\n        <PortDetailForm port={port} onClick={onClick} admin={admin} />\r\n      ) : (\r\n        <div className=\"loading__title\">글을 불러오는 중입니다.</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./PortWritingForm.scss\";\r\nexport const PortEditForm = ({ port, onChange, onSubmit }) => {\r\n  const { title, description, category, createDate } = port;\r\n\r\n  return (\r\n    <>\r\n      <form className=\"port__form\" onChange={onChange} onSubmit={onSubmit}>\r\n        <input type=\"date\" name=\"createDate\" defaultValue={createDate}></input>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"title\"\r\n          defaultValue={title}\r\n        />\r\n        <textarea\r\n          type=\"text\"\r\n          name=\"description\"\r\n          placeholder=\"description\"\r\n          defaultValue={description}\r\n        />\r\n        <input type=\"file\" name=\"imgUrl\" placeholder=\"image\" />\r\n        <input\r\n          className=\"tags\"\r\n          type=\"text\"\r\n          name=\"category\"\r\n          placeholder=\"태그\"\r\n          defaultValue={category}\r\n        />\r\n        <input className=\"form__submit\" type=\"submit\" value=\"UPDATE\"></input>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { PortEditForm } from \"../../components/port/PortEditForm\";\r\nimport { useGetPort } from \"../../middleware\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nexport const PortEdit = ({ history }) => {\r\n  const { id } = useParams();\r\n\r\n  // get portfolio\r\n  const ports = useGetPort(`/port/${id}`);\r\n  const { port } = ports;\r\n\r\n  const [updated, setUpdated] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // get previous portfolio value\r\n  useEffect(() => {\r\n    const getPort = async () => {\r\n      try {\r\n        await Axios.get(`/port/${id}`).then((res) => setUpdated(res.data));\r\n        setLoading(true);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getPort();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // updated portfolio\r\n  const { title, description, imgUrl, category, createDate, update } = updated;\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setUpdated({ ...updated });\r\n    const updatePort = async () => {\r\n      await Axios.post(`/port/edit/${id}`, {\r\n        title,\r\n        description,\r\n        createDate,\r\n        category,\r\n        imgUrl,\r\n      }).then((res) => setUpdated({ ...updated, update: true }));\r\n    };\r\n    updatePort();\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUpdated({ ...updated, [name]: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (update) {\r\n      history.push(\"/portfolio\");\r\n    }\r\n    // eslint-disable-next-line\r\n  });\r\n\r\n  if (!loading) {\r\n    return (\r\n      <div className=\"loading__title\">디테일 화면 페이지로 이동 중입니다.</div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>My Blog | 수정 {port.title}</title>\r\n      </Helmet>\r\n      <PortEditForm port={port} onChange={onChange} onSubmit={onSubmit} />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const ContactForm = () => {\r\n  return <div className=\"loading__title\">미구현</div>;\r\n};\r\n","import React from \"react\";\r\nimport { ContactForm } from \"../../components/main/ContactForm\";\r\n\r\nexport const Contact = () => {\r\n  return (\r\n    <>\r\n      <ContactForm></ContactForm>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport Axios from \"axios\";\nimport { Helmet } from \"react-helmet-async\";\n\n// scss\nimport \"./loading.scss\";\n// page\nimport Nav from \"./components/Nav\";\nimport Home from \"./Pages/main/Home\";\nimport About from \"./Pages/main/About\";\nimport Post from \"./Pages/main/Post\";\nimport Portfolio from \"./Pages/main/Portfolio\";\nimport PostWriting from \"./Pages/post/PostWriting\";\nimport PostDetail from \"./Pages/post/PostDetail\";\nimport Register from \"./Pages/login/Register\";\nimport dotenv from \"dotenv\";\nimport NotFound from \"./Pages/main/NotFound\";\nimport Login from \"./Pages/login/Login\";\nimport PostEdit from \"./Pages/post/PostEdit\";\nimport { useUserId } from \"./middleware\";\nimport { PortWriting } from \"./Pages/portfolio/PortWriting\";\nimport { PortDetail } from \"./Pages/portfolio/PortDetail\";\nimport { PortEdit } from \"./Pages/portfolio/PortEdit\";\nimport { Contact } from \"./Pages/main/Contact\";\ndotenv.config();\n\nfunction App() {\n  // 미디어 쿼리 조절\n  const [width, setWidth] = useState(768);\n  const handleWidth = useCallback(() => {\n    const innerWidth = window.innerWidth;\n    setWidth(innerWidth);\n  }, []);\n\n  useEffect(() => {\n    handleWidth();\n    // eslint-disable-next-line\n  }, [width]);\n\n  const onChange = window.addEventListener(\"resize\", handleWidth);\n\n  // user 확인\n  const getUser = useUserId(\"/auth\");\n  const { userId, loading } = getUser;\n  const { admin } = userId;\n\n  // userLogout\n  const [logout, setLogout] = useState(false);\n\n  const onClick = () => {\n    const userLogout = async () => {\n      try {\n        await Axios.post(\"/auth/logout\");\n        setLogout(true);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    userLogout();\n  };\n\n  if (logout) {\n    return (window.location.href = \"/\");\n  }\n  if (!loading) {\n    return (\n      <div className=\"loading__title\">로딩중입니다. 잠시만 기다려주세요^^</div>\n    );\n  }\n  return (\n    <>\n      <Helmet>\n        <title>My Blog | Home</title>\n      </Helmet>\n      <Nav\n        userId={userId}\n        logout={logout}\n        onClick={onClick}\n        width={width}\n        onChange={onChange}\n        admin={admin}\n      ></Nav>\n      <Switch>\n        <Route exact path={routes.home} component={Home}></Route>\n        <Route path={routes.register} component={Register}></Route>\n        <Route path={routes.login} component={Login}></Route>\n        <Route path={routes.portfolio} component={Portfolio}></Route>\n        <Route path={routes.post} component={Post}></Route>\n        <Route path={routes.about} component={About}></Route>\n        <Route path=\"/postdetail/:id\" component={PostDetail}></Route>\n        <Route path={\"/edit/:id\"} component={PostEdit} />\n        {userId ? (\n          <Route path={routes.postwriting} component={PostWriting}></Route>\n        ) : (\n          <Route path={routes.postwriting}>\n            <h3 className=\"error__title\">\n              로그인을 하셔야 포스팅을 하실 수 있습니다.\n            </h3>\n          </Route>\n        )}\n        <Route path=\"/portdetail/:id\" component={PortDetail} />\n        {admin ? (\n          <Route path=\"/portedit/:id\" component={PortEdit} />\n        ) : (\n          <div className=\"error_title\">관리자가 아닙니다.</div>\n        )}\n\n        {admin ? (\n          <Route path={routes.portwriting} component={PortWriting} />\n        ) : (\n          <div className=\"error_title\">관리자가 아닙니다. </div>\n        )}\n\n        <Route path={\"/contact\"} component={Contact} />\n        <Route component={NotFound} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createAction, handleActions } from \"redux-actions\";\n\nexport const green = createAction(\"green\");\nexport const red = createAction(\"red\");\nexport const blue = createAction(\"blue\");\n\nconst initialState = { backgroundColor: \"\" };\n\nconst reducer = handleActions(\n  {\n    [green]: (state, action) => ({\n      ...state,\n      backgroundColor: \"#00b894\",\n    }),\n    [red]: (state, action) => ({\n      ...state,\n      backgroundColor: \"#d63031\",\n    }),\n    [blue]: (state, action) => ({\n      ...state,\n      backgroundColor: \"#0984e3\",\n    }),\n  },\n  initialState\n);\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./reset.scss\";\nimport \"react-quill/dist/quill.snow.css\";\nimport \"react-quill/dist/quill.bubble.css\";\n// reducer\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducer from \"./modules/reducer\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <HelmetProvider>\n        <App />\n      </HelmetProvider>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/3.2c9f609b.jpg\";"],"sourceRoot":""}