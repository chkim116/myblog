{"version":3,"sources":["routes.js","components/Nav.js","components/HomeForm.js","Pages/main/Home.js","components/main/AboutForm.js","components/FooterForm.js","Pages/main/About.js","components/post/PostPagination.js","components/main/PostForm.js","Pages/main/Post.js","components/main/PortfoiloForm.js","middleware.js","Pages/main/Portfolio.js","components/post/PostingForm.js","Pages/post/PostWriting.js","components/post/PostDetailForm.js","Pages/post/PostDetail.js","components/login/RegisterForm.js","Pages/login/Register.js","Pages/main/NotFound.js","components/login/LoginForm.js","Pages/login/Login.js","components/post/PostEditForm.js","Pages/post/PostEdit.js","components/port/PortWritingForm.js","Pages/portfolio/PortWriting.js","components/port/PortDetailForm.js","Pages/portfolio/PortDetail.js","components/port/PortEditForm.js","Pages/portfolio/PortEdit.js","App.js","serviceWorker.js","modules/reducer.js","index.js","image/3.jpg","image/home.jpg"],"names":["routes","home","portfolio","post","about","me","admin","register","login","postwriting","postdetail","portwriting","portdetail","Nav","userId","onClick","width","onChange","username","onClickNav","document","querySelector","classList","toggle","to","className","HomeForm","src","img","alt","href","target","Home","AboutForm","dots","infinite","speed","autoplay","autoplaySpeed","slidesToShow","slidesToScroll","year","Date","getFullYear","FooterForm","About","PostPagination","handleChange","postLength","page","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","PostForm","postObj","loading","map","p","key","_id","title","updated","dangerouslySetInnerHTML","__html","description","createDate","Post","location","history","useState","query","search","setPage","creator","setPost","setPostLenght","setLoading","useEffect","url","a","Axios","get","then","res","data","getPagePost","getElementById","scrollIntoView","behavior","console","log","pagePost","posting","Math","ceil","length","AllPost","e","selected","push","PortfolioForm","port","category","registerCheck","err","message","response","undefined","alert","useUserId","id","setUserId","getUserId","useGetPost","setpost","getPost","useGetPort","imgUrl","setport","getPort","modules","toolbar","font","size","list","align","color","background","formats","Portfolio","ports","PostingForm","onSubmit","onValue","type","name","placeholder","theme","value","PostWriting","window","preventDefault","catch","axiosData","content","delta","source","editor","text","getHTML","PostDetailForm","PostDetail","useParams","del","setDel","deletePost","RegisterForm","min","required","Register","password","password2","email","setRegister","setMessage","user","setUser","showMessage","adminRegister","NotFound","AdminLoginForm","Login","setLogin","postLogin","PostEditForm","defaultValue","PostEdit","updatePost","setUpdatePost","update","setUpdate","PortWritingForm","PortWriting","setPort","postPortFolio","PortDetailForm","split","PortDetail","PortEditForm","PortEdit","setUpdated","updatePort","dotenv","config","App","setWidth","handleWidth","useCallback","innerWidth","addEventListener","getUser","logout","setLogout","userLogout","exact","path","component","Boolean","hostname","match","green","createAction","red","blue","reducer","handleActions","state","action","backgroundColor","store","createStore","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.d067da1a.chunk.js","sourcesContent":["//  basic path\nconst HOME = \"/\";\nconst PORTFOLIO = \"/portfolio\";\nconst POST = \"/post\";\nconst ABOUT = \"/about\";\nconst ME = \"/me\";\nconst REGISTER = \"/register\";\nconst LOGIN = \"/login\";\n\n// 관리자\nconst ADMIN = \"/admin\";\n// posting\nconst POSTWRITING = \"/postwriting\";\nconst POSTDETAIL = \"/postdetail\";\n\n// port\nconst PORTWRITING = \"/portwriting\";\nconst PORTDETAIL = \"/portdetail\";\nconst routes = {\n  home: HOME,\n  portfolio: PORTFOLIO,\n  post: POST,\n  about: ABOUT,\n  me: ME,\n  admin: ADMIN,\n  register: REGISTER,\n  login: LOGIN,\n  postwriting: POSTWRITING,\n  postdetail: POSTDETAIL,\n  portwriting: PORTWRITING,\n  portdetail: PORTDETAIL,\n};\n\nexport default routes;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"../routes\";\nimport { GiHamburgerMenu } from \"react-icons/gi\";\nimport \"./Nav.scss\";\n\nconst Nav = ({ userId, onClick, width, onChange, admin }) => {\n  const { username } = userId;\n  const onClickNav = () => {\n    const menu = document.querySelector(\".header__menu\");\n    menu.classList.toggle(\"active\");\n  };\n\n  return (\n    <>\n      <header onChange={onChange}>\n        <li>\n          <Link to={routes.home} className=\"header__logo\">\n            Think_Tank\n          </Link>\n        </li>\n        <nav className=\"header__menu\">\n          <Link to={routes.home} className=\"menu__items\" onClick={onClickNav}>\n            <li>Home</li>\n          </Link>\n          <Link\n            to={routes.portfolio}\n            className=\"menu__items\"\n            onClick={onClickNav}\n          >\n            <li>Portfolio</li>\n          </Link>\n          <Link to={routes.post} className=\"menu__items\" onClick={onClickNav}>\n            <li>Post</li>\n          </Link>\n          <Link to={routes.about} className=\"menu__items\" onClick={onClickNav}>\n            <li>About Me</li>\n          </Link>\n          {!username ? (\n            <>\n              <Link\n                to={routes.login}\n                className=\"menu__items\"\n                onClick={onClickNav}\n              >\n                <li>Login</li>\n              </Link>\n              <Link\n                to={routes.register}\n                className=\"menu__items\"\n                onClick={onClickNav}\n              >\n                <li>Register</li>\n              </Link>\n            </>\n          ) : (\n            <>\n              <li className=\"menu__items\" onClick={onClick}>\n                Logout\n              </li>\n              {!admin ? (\n                <li className=\"username\">{username}님 어서오세요</li>\n              ) : (\n                <li className=\"username\">\n                  관리자님 어서오세요 아이디는 {username}입니다.\n                </li>\n              )}\n            </>\n          )}\n        </nav>\n        {768 >= width ? (\n          <li className=\"header__hamburger\" onClick={onClickNav}>\n            <GiHamburgerMenu />\n          </li>\n        ) : (\n          <> </>\n        )}\n      </header>\n    </>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport \"./HomeForm.scss\";\nimport img from \"../image/3.jpg\";\n\nconst HomeForm = () => {\n  return (\n    <>\n      <div className=\"main\">\n        <img src={img} alt=\"home\"></img>\n        <h2 className=\"home__title\">Create New EveryDay!</h2>\n        <h4 className=\"home__desc\">\n          There have to be reasons that you get up in the morning and you want\n          to live.\n        </h4>\n        <button>\n          <a href=\"https://github.com/chkim116\" target=\"blank\">\n            View More My GitHub\n          </a>\n        </button>\n        <button>Send Me Together for Projects</button>\n      </div>\n    </>\n  );\n};\n\nexport default HomeForm;\n","import React from \"react\";\nimport HomeForm from \"../../components/HomeForm\";\n\nconst Home = () => {\n  return <HomeForm></HomeForm>;\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./AboutForm.scss\";\nimport {\n  SiHtml5,\n  SiCss3,\n  SiJavascript,\n  SiReact,\n  SiBabel,\n} from \"react-icons/si\";\nimport { FaNodeJs, FaSass } from \"react-icons/fa\";\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\nconst AboutForm = () => {\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 1500,\n    autoplay: true,\n    autoplaySpeed: 4500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n  };\n\n  return (\n    <>\n      <Slider {...settings} className=\"about\">\n        <div className=\"slide__one\">\n          <h1>For Web & Mobile</h1>\n          <h3>Our mission is to Design and develop the Best!</h3>\n        </div>\n        <div className=\"slide__two\">\n          <h1>Not Afraid</h1>\n          <h3>Every day new, Every day Different Tech</h3>\n        </div>\n        <div className=\"slide__three\">\n          <h1>Serendipity</h1>\n          <h3>New Creation, Unexpected Discovery</h3>\n        </div>\n      </Slider>\n\n      <div className=\"about__desc\">\n        <h1>About Me </h1>\n        <div className=\"about__icons\">\n          <div className=\"about__stack\">\n            <h5>Stack</h5>\n            <SiHtml5 className=\"about__stack-icon html\" />\n            <SiCss3 className=\"about__stack-icon css\" />\n            <SiJavascript className=\"about__stack-icon js\" />\n            <FaNodeJs className=\"about__stack-icon node\" />\n          </div>\n          <h5>Library Stack</h5>\n          <div className=\"about__stack-library\">\n            <SiReact className=\"about__stack-icon react\" />\n          </div>\n          <h5>Framwork Stack</h5>\n          <div className=\"about__stack-frame\">\n            <FaSass className=\"about__stack-icon sass\" />\n          </div>\n          <h5>Utilities Stack</h5>\n          <div className=\"about__stack-util\">\n            <SiBabel className=\"about__stack-icon babel\" />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AboutForm;\n","import React from \"react\";\nimport \"./FooterForm.scss\";\n\nconst year = new Date().getFullYear();\n\nconst FooterForm = () => {\n  return (\n    <footer>\n      <div>\n        <h2> Think_Tank </h2>\n        <small>Copyright ©{year}</small>\n      </div>\n    </footer>\n  );\n};\n\nexport default FooterForm;\n","import React from \"react\";\nimport AboutForm from \"../../components/main/AboutForm\";\nimport FooterForm from \"../../components/FooterForm\";\n\nconst About = () => {\n  return (\n    <>\n      <AboutForm />\n      <FooterForm />\n    </>\n  );\n};\n\nexport default About;\n","import React from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nexport const PostPagination = ({ handleChange, page, postLength }) => {\r\n  return (\r\n    <>\r\n      <ReactPaginate\r\n        previousLabel={\"previous\"}\r\n        nextLabel={\"next\"}\r\n        breakLabel={\"...\"}\r\n        breakClassName={\"break-me\"}\r\n        pageCount={postLength}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={5}\r\n        onPageChange={handleChange}\r\n        containerClassName={\"pagination\"}\r\n        subContainerClassName={\"pages pagination\"}\r\n        activeClassName={\"active\"}\r\n      ></ReactPaginate>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./PostForm.scss\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport { PostPagination } from \"../post/PostPagination\";\n\nconst PostForm = ({\n  postObj,\n  loading,\n  onClick,\n  handleChange,\n  page,\n  postLength,\n}) => {\n  const { post } = postObj;\n  return (\n    <>\n      {loading ? (\n        <div className=\"post__wrap\">\n          <div className=\"post\">\n            <span className=\"btn post-btn\" onClick={onClick}>\n              <Link to={routes.postwriting}>Post</Link>\n            </span>\n          </div>\n          <div className=\"post__form\">\n            {post.map((p) => (\n              <div className=\"post_form-type\" key={p._id}>\n                <Link to={`/postdetail/${p._id}`}>\n                  <h3 className=\"post__form-title\">\n                    {p.title}\n                    <small className=\"updated\">{p.updated}</small>\n                  </h3>\n                  <p\n                    className=\"post__form-desc\"\n                    dangerouslySetInnerHTML={{ __html: p.description }}\n                  >\n                    {/* {p.description.length > 300\n                      ? p.description.slice(0, 150).concat(\"  ...더보기\")\n                      : p.description} */}\n                  </p>\n                  <p className=\"post__form-date\">\n                    <small>{p.createDate}</small>\n                  </p>\n                </Link>\n              </div>\n            ))}\n          </div>\n          <div className=\"post__form-page\">\n            <PostPagination\n              handleChange={handleChange}\n              page={page}\n              postLength={postLength}\n            ></PostPagination>\n          </div>\n        </div>\n      ) : (\n        <h1 className=\"loading__title\">글을 불러오는 중입니다.</h1>\n      )}\n    </>\n  );\n};\n\nexport default PostForm;\n","import React, { useState, useEffect } from \"react\";\nimport FooterForm from \"../../components/FooterForm\";\nimport PostForm from \"../../components/main/PostForm\";\nimport Axios from \"axios\";\n\nconst Post = ({ location, history }) => {\n  // 포스트의 총 개수\n  // url에 따른 포스트 호출 (인자는 이게 필요하다.)\n  const [page, setPage] = useState({ query: location.search });\n\n  const { query } = page;\n\n  const [post, setPost] = useState({\n    title: \"\",\n    description: \"\",\n    updated: \"\",\n    creator: \"\",\n  });\n  const [postLength, setPostLenght] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const getPost = (url) => {\n    const pagePost = async () => {\n      try {\n        const getPagePost = await Axios.get(`/api${url}`).then(\n          (res) => res.data\n        );\n        setPost(getPagePost);\n        setLoading(true);\n        document.getElementById(\"root\").scrollIntoView({ behavior: \"smooth\" });\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    pagePost();\n  };\n\n  const getAllPost = () => {\n    const AllPost = async () => {\n      try {\n        const posting = await Axios.get(\"/api/all\").then((res) => res.data);\n        setPostLenght(Math.ceil(posting.length / 3));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    AllPost();\n  };\n\n  useEffect(() => {\n    getPost(query);\n  }, [query]);\n\n  useEffect(() => {\n    getAllPost();\n  }, []);\n\n  const handleChange = (e) => {\n    const { selected } = e;\n    setPage({ query: `?page=${selected + 1}` });\n    history.push(`/post?page=${selected + 1}`);\n    console.log(`누른 버튼은 ${selected + 1}`);\n  };\n\n  console.log(\n    `page : ${page.query}`,\n    `post : ${post.length}`,\n    `페이지 넘버 ${postLength}`\n  );\n\n  return (\n    <>\n      <PostForm\n        postObj={{ post }}\n        loading={loading}\n        postLength={postLength}\n        page={page}\n        handleChange={handleChange}\n      />\n      <FooterForm />\n    </>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport \"./PortfolioForm.scss\";\nimport img from \"../../image/home.jpg\";\nimport { Link } from \"react-router-dom\";\nimport routes from \"../../routes\";\nimport { BsHammer } from \"react-icons/bs\";\n\nconst PortfolioForm = ({ port, admin }) => {\n  return (\n    <>\n      {admin && (\n        <Link to={routes.portwriting} className=\"post\">\n          글 작성\n        </Link>\n      )}\n      <div className=\"contents\">\n        {port.map((p, key) => (\n          <div className=\"article__post\" key={key}>\n            <Link to={`/portdetail/${p._id}`}>\n              <img className=\"post_thumbnail\" src={img} alt=\"img\"></img>\n              <h3 className=\"post__title\">{p.title}</h3>\n              <p className=\"post__desc\">{p.description}</p>\n              <h4>\n                <BsHammer />\n                {p.createDate}\n              </h4>\n              <small>Categories{p.category}</small>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default PortfolioForm;\n","import { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\n\r\nexport function registerCheck(err, url, { history }) {\r\n  const {\r\n    data: { message },\r\n  } = err.response;\r\n  if (message !== undefined) {\r\n    history.push(`/${url}`);\r\n    alert(`${message}`);\r\n  }\r\n}\r\n\r\n// id, username hooks\r\nexport const useUserId = (url) => {\r\n  const [userId, setUserId] = useState({\r\n    id: \"\",\r\n    username: \"\",\r\n    admin: false,\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getUserId = async () => {\r\n    try {\r\n      await Axios.get(url).then((res) => setUserId(res.data));\r\n      setLoading(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getUserId();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return { userId, loading };\r\n};\r\n\r\n// get Post Hooks\r\nexport const useGetPost = (url) => {\r\n  const [post, setpost] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    updated: \"\",\r\n    creator: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getPost = async () => {\r\n    try {\r\n      await Axios.get(url).then((res) => setpost(res.data));\r\n      setLoading(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPost();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return { post, loading };\r\n};\r\n\r\nexport const useGetPort = (url) => {\r\n  const [port, setport] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    imgUrl: \"\",\r\n    createDate: \"\",\r\n    category: \"\",\r\n    creator: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getPort = async () => {\r\n    try {\r\n      await Axios.get(url).then((res) => setport(res.data));\r\n      setLoading(true);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPort();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return { port, loading };\r\n};\r\n\r\n// react-quill\r\n\r\nexport const modules = {\r\n  toolbar: [\r\n    [{ font: [] }],\r\n    [{ size: [\"small\", false, \"large\", \"huge\"] }],\r\n    [\"bold\", \"italic\", \"underline\"],\r\n    [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n    [{ align: [] }],\r\n    [{ color: [] }, { background: [] }],\r\n    [\"link\", \"image\", \"video\"],\r\n    [\"clean\"],\r\n  ],\r\n};\r\n\r\nexport const formats = [\r\n  \"font\",\r\n  \"size\",\r\n  \"bold\",\r\n  \"italic\",\r\n  \"underline\",\r\n  \"list\",\r\n  \"bullet\",\r\n  \"align\",\r\n  \"color\",\r\n  \"background\",\r\n  \"link\",\r\n  \"image\",\r\n  \"video\",\r\n];\r\n","import React from \"react\";\nimport PortfolioForm from \"../../components/main/PortfoiloForm\";\nimport FooterForm from \"../../components/FooterForm\";\nimport { useGetPort, useUserId } from \"../../middleware\";\n\nconst Portfolio = () => {\n  const ports = useGetPort(\"/port\");\n  const { port, loading } = ports;\n  const getUser = useUserId(\"/auth\");\n  const { userId } = getUser;\n  const { admin } = userId;\n  return (\n    <>\n      {loading ? (\n        <>\n          <PortfolioForm port={port} admin={admin}></PortfolioForm>\n          <FooterForm />\n        </>\n      ) : (\n        <div className=\"loading__title\">로딩 중</div>\n      )}\n    </>\n  );\n};\n\nexport default Portfolio;\n","import React, { useEffect, useState } from \"react\";\nimport \"./PostingForm.scss\";\nimport ReactQuill from \"react-quill\";\n\nimport { modules, formats } from \"../../middleware\";\n\nconst PostingForm = ({ onSubmit, onChange, onValue }) => {\n  const [loading, setLoading] = useState(\"\");\n  useEffect(() => {\n    setLoading(true);\n  }, []);\n\n  if (!loading) {\n    return <div className=\"loading__title\"> 로딩중</div>;\n  }\n\n  return (\n    <>\n      <form className=\"posting__form\" onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"title\"\n          onChange={onChange}\n        ></input>\n        <ReactQuill\n          theme=\"snow\"\n          modules={modules}\n          formats={formats}\n          name=\"description\"\n          placeholder=\"description\"\n          onChange={onValue}\n        ></ReactQuill>\n        <input className=\"form__submit\" type=\"submit\" value=\"UPLOAD\"></input>\n      </form>\n    </>\n  );\n};\n\nexport default PostingForm;\n","import React, { useState, useEffect } from \"react\";\nimport PostingForm from \"../../components/post/PostingForm\";\nimport Axios from \"axios\";\n\nconst PostWriting = () => {\n  const initialState = {\n    title: \"\",\n    description: \"\",\n    updated: \"\",\n  };\n\n  const [post, setPost] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const { title, description, updated } = post;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setPost({ ...post });\n    const axiosData = async () => {\n      await Axios.post(\"/api/post\", {\n        title,\n        description,\n        updated,\n      }).catch((err) => {\n        console.log(err);\n      });\n    };\n    axiosData();\n    setLoading(true);\n  };\n\n  const onChange = (e) => {\n    const { value, name } = e.target;\n    setPost({\n      ...post,\n      [name]: value,\n    });\n  };\n\n  const onValue = (content, delta, source, editor) => {\n    const text = editor.getHTML();\n    setPost({\n      ...post,\n      description: text,\n    });\n  };\n\n  useEffect(() => {\n    if (loading) {\n      window.location.href = \"/post\";\n    }\n  });\n\n  return (\n    <PostingForm\n      onSubmit={onSubmit}\n      onChange={onChange}\n      title={title}\n      onValue={onValue}\n      description={description}\n    ></PostingForm>\n  );\n};\n\nexport default PostWriting;\n","import React from \"react\";\nimport \"./PostDetailForm.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst PostDetailForm = ({ postObj, loading, onClick, userId }) => {\n  const { title, description, _id, createDate, creator } = postObj;\n  if (!loading) {\n    return <div className=\"loading__title\">글 화면으로 가는 중</div>;\n  }\n\n  return (\n    <>\n      <div className=\"post__detail\" key={_id}>\n        <div className=\"post__btn\">\n          {userId === creator && (\n            <>\n              <span className=\"btn\">\n                <Link to={`/edit/${_id}`}>Edit</Link>\n              </span>\n              <span className=\"btn\" onClick={onClick}>\n                Delete\n              </span>\n            </>\n          )}\n        </div>\n        <h2 className=\"post__detail-title\">{title}</h2>\n        <p\n          className=\"post__detail-desc\"\n          dangerouslySetInnerHTML={{ __html: description }}\n        >\n          {/* {description.split(\"\\n\").map((text, key) => {\n            return (\n              <span key={key}>\n                {text}\n                <br />\n              </span>\n            );\n          })} */}\n        </p>\n        <p className=\"post__detail-date\">\n          <small>Uploaded: {createDate}</small>\n        </p>\n      </div>\n    </>\n  );\n};\n\n// axios get ('/postdetail/(id))\nexport default PostDetailForm;\n","import React, { useEffect, useState } from \"react\";\nimport Axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport PostDetailForm from \"../../components/post/PostDetailForm\";\nimport { useUserId, useGetPost } from \"../../middleware\";\n\nconst PostDetail = ({ history }) => {\n  const { id } = useParams();\n  // get Id\n  const usersId = useUserId(\"/auth\");\n  const {\n    userId: { id: userId },\n  } = usersId;\n\n  // get Post Detail\n  const getPost = useGetPost(`/api/${id}`);\n  const { post, loading } = getPost;\n\n  //  del post\n\n  const [del, setDel] = useState(false);\n\n  const onClick = () => {\n    const deletePost = async () => {\n      await Axios.get(`/api/del/${id}`).then((res) => setDel(res.data));\n    };\n    deletePost();\n  };\n\n  useEffect(() => {\n    if (del) {\n      history.push(\"/post\");\n    }\n  });\n\n  return (\n    <>\n      <PostDetailForm\n        postObj={post}\n        loading={loading}\n        onClick={onClick}\n        userId={userId}\n      />\n    </>\n  );\n};\n\nexport default PostDetail;\n","import React from \"react\";\nimport \"./RegisterForm.scss\";\n\nconst RegisterForm = ({ onChange, onSubmit, message }) => {\n  return (\n    <>\n      {message && (\n        <div className=\"flash__message\">비밀번호를 다시 확인해 주세요!</div>\n      )}\n      <form className=\"register__form\" onChange={onChange} onSubmit={onSubmit}>\n        <h2 className=\"register__title\">회원 가입</h2>\n        <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"아이디 또는 이름\"\n          min=\"3\"\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          required\n          min=\"6\"\n          placeholder=\"6자리 이상의 비밀번호\"\n        />\n        <input\n          type=\"password\"\n          name=\"password2\"\n          required\n          placeholder=\"비밀번호 확인\"\n        />\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"ex) xxxxxxx@xxxx.com\"\n          required\n        />\n        <input className=\"form__submit\" type=\"submit\" value=\"가입완료\" />\n      </form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import React, { useState, useEffect } from \"react\";\nimport RegisterForm from \"../../components/login/RegisterForm\";\nimport Axios from \"axios\";\nimport { registerCheck } from \"../../middleware\";\n\nconst Register = ({ history }) => {\n  const initialState = {\n    username: \"\",\n    password: \"\",\n    password2: \"\",\n    email: \"\",\n  };\n\n  const [register, setRegister] = useState(initialState);\n  const [message, setMessage] = useState(false);\n  const [user, setUser] = useState(false);\n  const { username, password, password2, email } = register;\n\n  const showMessage = (e) => {\n    e.preventDefault();\n    if (!message) {\n      setMessage(true);\n    }\n  };\n\n  const onSubmit = (e) => {\n    // 하나씩 다 유효성 검사하기\n    if (password !== password2 || username.length < 6 || password < 6) {\n      showMessage(e);\n    } else {\n      e.preventDefault();\n      setRegister({ ...register });\n      const adminRegister = async () => {\n        try {\n          await Axios.post(\"/auth/register\", {\n            username,\n            password,\n            email,\n          }).then((res) => setUser(res.data));\n          console.log(user);\n        } catch (err) {\n          const REGISTER = \"register\";\n          registerCheck(err, REGISTER, { history });\n        }\n      };\n      adminRegister();\n    }\n  };\n\n  useEffect(() => {\n    if (user) window.location.href = \"/\";\n    return () => {\n      setUser(false);\n    };\n  }, [user]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setRegister({ ...register, [name]: value });\n    setMessage(false);\n  };\n\n  return (\n    <RegisterForm\n      message={message}\n      onChange={onChange}\n      onSubmit={onSubmit}\n    ></RegisterForm>\n  );\n};\n\nexport default Register;\n","import React from \"react\";\r\nimport \"../../ErrorPage.scss\";\r\n\r\nconst NotFound = () => {\r\n  return <h3 className=\"error__title\">Not Found!</h3>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\nimport \"./LoginForm.scss\";\n\nconst AdminLoginForm = ({ onChange, onSubmit }) => {\n  return (\n    <>\n      <form className=\"admin__form\" onSubmit={onSubmit} onChange={onChange}>\n        <h2>로그인</h2>\n        <input type=\"text\" name=\"username\" placeholder=\"아이디\" />\n        <input\n          type=\"password\"\n          name=\"password\"\n          min=\"6\"\n          placeholder=\"6자리 이상의 비밀번호\"\n        />\n        <input className=\"form__submit\" type=\"submit\" value=\"로그인\" />\n      </form>\n    </>\n  );\n};\n\nexport default AdminLoginForm;\n","import React, { useState, useEffect } from \"react\";\nimport LoginForm from \"../../components/login/LoginForm\";\nimport Axios from \"axios\";\nimport { registerCheck } from \"../../middleware\";\n\nconst Login = ({ history, location }) => {\n  const initialState = {\n    username: \"\",\n    password: \"\",\n  };\n  const [login, setLogin] = useState(initialState);\n  const [user, setUser] = useState(false);\n  const { username, password } = login;\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setLogin({ ...login });\n    const postLogin = async () => {\n      try {\n        await Axios.post(\"/auth/login\", {\n          username,\n          password,\n        });\n        setUser(true);\n      } catch (err) {\n        const LOGIN = \"login\";\n        registerCheck(err, LOGIN, { history });\n      }\n    };\n    postLogin();\n  };\n\n  useEffect(() => {\n    if (user) window.location.href = \"/\";\n    return () => {\n      setUser(false);\n    };\n  }, [user]);\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setLogin({ ...login, [name]: value });\n  };\n\n  return (\n    <LoginForm user={user} onSubmit={onSubmit} onChange={onChange}></LoginForm>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\r\nimport \"./PostingForm.scss\";\r\nimport ReactQuill from \"react-quill\";\r\nimport { modules, formats } from \"../../middleware\";\r\n\r\nconst PostEditForm = ({ post, loading, onChange, onSubmit, onValue }) => {\r\n  const { title, description } = post;\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <form className=\"posting__form\" onSubmit={onSubmit} onChange={onChange}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            defaultValue={title}\r\n            placeholder=\"title\"\r\n          ></input>\r\n          <ReactQuill\r\n            theme=\"snow\"\r\n            modules={modules}\r\n            formats={formats}\r\n            name=\"description\"\r\n            defaultValue={description}\r\n            placeholder=\"description\"\r\n            onChange={onValue}\r\n          ></ReactQuill>\r\n          <input className=\"form__submit\" type=\"submit\" value=\"UPDATE\"></input>\r\n        </form>\r\n      ) : (\r\n        <div className=\"loading__title\">디테일 수정화면으로 가는 중</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostEditForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PostEditForm from \"../../components/post/PostEditForm\";\r\nimport Axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGetPost } from \"../../middleware\";\r\n\r\nconst PostEdit = ({ history }) => {\r\n  const { id } = useParams();\r\n\r\n  //   get post\r\n  const getPost = useGetPost(`/api/${id}`);\r\n  const { post } = getPost;\r\n\r\n  const [updatePost, setUpdatePost] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getPost = async () => {\r\n      try {\r\n        await Axios.get(`/api/${id}`).then((res) => setUpdatePost(res.data));\r\n        setLoading(true);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getPost();\r\n  }, []);\r\n\r\n  // update Post\r\n  const [update, setUpdate] = useState(false);\r\n  const { title, description, updated } = updatePost;\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setUpdatePost({ ...updatePost });\r\n    const axiosData = async () => {\r\n      try {\r\n        await Axios.post(`/api/edit/${id}`, {\r\n          title,\r\n          description,\r\n          updated,\r\n        }).then((res) => setUpdatePost({ ...updatePost, updated: \"(수정됨)\" }));\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n      setUpdate(true);\r\n    };\r\n    axiosData();\r\n    console.log(updatePost);\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUpdatePost({\r\n      ...updatePost,\r\n      [name]: value,\r\n      updated: \"(수정됨)\",\r\n    });\r\n  };\r\n\r\n  const onValue = (content, delta, source, editor) => {\r\n    const text = editor.getHTML();\r\n    setUpdatePost({\r\n      ...updatePost,\r\n      description: text,\r\n      updated: \"(수정됨)\",\r\n    });\r\n  };\r\n\r\n  // if update go post page\r\n  useEffect(() => {\r\n    if (update) {\r\n      history.push(\"/post\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <PostEditForm\r\n      post={post}\r\n      loading={loading}\r\n      onSubmit={onSubmit}\r\n      onChange={onChange}\r\n      onValue={onValue}\r\n    ></PostEditForm>\r\n  );\r\n};\r\n\r\nexport default PostEdit;\r\n","import React from \"react\";\r\nimport \"./PortWritingForm.scss\";\r\nimport ReactQuill from \"react-quill\";\r\nimport { modules, formats } from \"../../middleware\";\r\n\r\nexport const PortWritingForm = ({ onSubmit, onChange, onValue }) => {\r\n  return (\r\n    <>\r\n      <form className=\"port__form\" onChange={onChange} onSubmit={onSubmit}>\r\n        <input type=\"date\" name=\"createDate\"></input>\r\n        <input type=\"text\" name=\"title\" placeholder=\"title\"></input>\r\n        <ReactQuill\r\n          theme=\"snow\"\r\n          modules={modules}\r\n          formats={formats}\r\n          name=\"description\"\r\n          placeholder=\"description\"\r\n          onChange={onValue}\r\n        ></ReactQuill>\r\n        <input type=\"file\" name=\"imgUrl\" placeholder=\"image \"></input>\r\n        <input\r\n          className=\"tags\"\r\n          type=\"text\"\r\n          name=\"category\"\r\n          placeholder=\"태그\"\r\n        ></input>\r\n        <input className=\"form__submit\" type=\"submit\" value=\"UPLOAD\"></input>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { PortWritingForm } from \"../../components/port/PortWritingForm\";\r\nimport Axios from \"axios\";\r\n\r\nexport const PortWriting = ({ history }) => {\r\n  const initialState = {\r\n    title: \"\",\r\n    description: \"\",\r\n    imgUrl: \"\",\r\n    createDate: \"\",\r\n    category: \"\",\r\n  };\r\n\r\n  const [port, setPort] = useState(initialState);\r\n  const [loading, setLoading] = useState(false);\r\n  const { title, description, imgUrl, createDate, category } = port;\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPort({ ...port, [name]: value });\r\n  };\r\n  const onValue = (content, delta, source, editor) => {\r\n    const text = editor.getHTML();\r\n    setPort({\r\n      ...port,\r\n      description: text,\r\n    });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const postPortFolio = async () => {\r\n      try {\r\n        await Axios.post(\"/port/post\", {\r\n          title,\r\n          description,\r\n          imgUrl,\r\n          createDate,\r\n          category,\r\n        }).then((res) => setLoading(res.data));\r\n      } catch (err) {\r\n        console.log(err);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    postPortFolio();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      history.push(\"/portfolio\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <PortWritingForm\r\n        onChange={onChange}\r\n        onSubmit={onSubmit}\r\n        onValue={onValue}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { BsHammer } from \"react-icons/bs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./PortDetailForm.scss\";\r\n\r\nexport const PortDetailForm = ({ port, onClick, admin }) => {\r\n  const { title, description, imgUrl, createDate, category, _id } = port;\r\n\r\n  return (\r\n    <>\r\n      <div className=\"port__detail\" key={_id}>\r\n        <div className=\"port__btn\">\r\n          {admin ? (\r\n            <>\r\n              <span className=\"btn\">\r\n                <Link to={`/portedit/${_id}`}>Edit</Link>\r\n              </span>\r\n              <span className=\"btn\" onClick={onClick}>\r\n                Delete\r\n              </span>\r\n            </>\r\n          ) : (\r\n            <> </>\r\n          )}\r\n        </div>\r\n        <h2 className=\"port__detail-title\">{title}</h2>\r\n        <p className=\"port__detail-desc\">\r\n          <img src={imgUrl} alt=\"이미지\"></img>\r\n          {description.split(\"\\n\").map((text, key) => {\r\n            return (\r\n              <span key={key}>\r\n                {text}\r\n                <br />\r\n              </span>\r\n            );\r\n          })}\r\n        </p>\r\n        <p>\r\n          <BsHammer />\r\n          {createDate}\r\n        </p>\r\n        <small>Categories: {category}</small>\r\n        <p className=\"port__detail-date\">\r\n          <small>Upload By: Kim</small>\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useGetPort, useUserId } from \"../../middleware\";\r\nimport { PortDetailForm } from \"../../components/port/PortDetailForm\";\r\nimport Axios from \"axios\";\r\n\r\nexport const PortDetail = ({ history }) => {\r\n  const { id } = useParams();\r\n  const ports = useGetPort(`/port/${id}`);\r\n  const { port, loading } = ports;\r\n  const loggedUser = useUserId(\"/auth\");\r\n  const {\r\n    userId: { admin },\r\n  } = loggedUser;\r\n  const [del, setDel] = useState(false);\r\n  const onClick = () => {\r\n    const deletePost = async () => {\r\n      await Axios.get(`/port/del/${id}`).then((res) => setDel(res.data));\r\n    };\r\n    deletePost();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (del) {\r\n      history.push(\"/portfolio\");\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <PortDetailForm port={port} onClick={onClick} admin={admin} />\r\n      ) : (\r\n        <div className=\"loading__title\">글을 불러오는 중입니다.</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./PortWritingForm.scss\";\r\nexport const PortEditForm = ({ port, onChange, onSubmit }) => {\r\n  const { title, description, category, createDate } = port;\r\n  return (\r\n    <>\r\n      <form className=\"port__form\" onChange={onChange} onSubmit={onSubmit}>\r\n        <input type=\"date\" name=\"createDate\" defaultValue={createDate}></input>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"title\"\r\n          defaultValue={title}\r\n        />\r\n        <textarea\r\n          type=\"text\"\r\n          name=\"description\"\r\n          placeholder=\"description\"\r\n          defaultValue={description}\r\n        />\r\n        <input type=\"file\" name=\"imgUrl\" placeholder=\"image\" />\r\n        <input\r\n          className=\"tags\"\r\n          type=\"text\"\r\n          name=\"category\"\r\n          placeholder=\"태그\"\r\n          defaultValue={category}\r\n        />\r\n        <input className=\"form__submit\" type=\"submit\" value=\"UPDATE\"></input>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { PortEditForm } from \"../../components/port/PortEditForm\";\r\nimport { useGetPort } from \"../../middleware\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nexport const PortEdit = ({ history }) => {\r\n  const { id } = useParams();\r\n  const ports = useGetPort(`/port/${id}`);\r\n  const { port } = ports;\r\n\r\n  const [updated, setUpdated] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getPort = async () => {\r\n      try {\r\n        await Axios.get(`/port/${id}`).then((res) => setUpdated(res.data));\r\n        setLoading(true);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getPort();\r\n  }, []);\r\n\r\n  const { title, description, imgUrl, category, createDate, update } = updated;\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setUpdated({ ...updated });\r\n    const updatePort = async () => {\r\n      await Axios.post(`/port/edit/${id}`, {\r\n        title,\r\n        description,\r\n        createDate,\r\n        category,\r\n        imgUrl,\r\n      }).then((res) => setUpdated({ ...updated, update: true }));\r\n    };\r\n    updatePort();\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUpdated({ ...updated, [name]: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (update) {\r\n      history.push(\"/portfolio\");\r\n    }\r\n    // eslint-disable-next-line\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <PortEditForm port={port} onChange={onChange} onSubmit={onSubmit} />\r\n      ) : (\r\n        <div className=\"loading__title\">\r\n          디테일 화면 페이지로 이동 중입니다.\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport routes from \"./routes\";\nimport Axios from \"axios\";\nimport \"react-quill/dist/quill.snow.css\";\nimport \"react-quill/dist/quill.bubble.css\";\n// scss\nimport \"./loading.scss\";\n// page\nimport Nav from \"./components/Nav\";\nimport Home from \"./Pages/main/Home\";\nimport About from \"./Pages/main/About\";\nimport Post from \"./Pages/main/Post\";\nimport Portfolio from \"./Pages/main/Portfolio\";\nimport PostWriting from \"./Pages/post/PostWriting\";\nimport PostDetail from \"./Pages/post/PostDetail\";\nimport Register from \"./Pages/login/Register\";\nimport dotenv from \"dotenv\";\nimport NotFound from \"./Pages/main/NotFound\";\nimport Login from \"./Pages/login/Login\";\nimport PostEdit from \"./Pages/post/PostEdit\";\nimport { useUserId } from \"./middleware\";\nimport { PortWriting } from \"./Pages/portfolio/PortWriting\";\nimport { PortDetail } from \"./Pages/portfolio/PortDetail\";\nimport { PortEdit } from \"./Pages/portfolio/PortEdit\";\ndotenv.config();\n\nfunction App() {\n  // 미디어 쿼리 조절\n  const [width, setWidth] = useState(768);\n  const handleWidth = useCallback(() => {\n    const innerWidth = window.innerWidth;\n    setWidth(innerWidth);\n  }, []);\n\n  useEffect(() => {\n    handleWidth();\n    // eslint-disable-next-line\n  }, [width]);\n\n  const onChange = window.addEventListener(\"resize\", handleWidth);\n\n  // user 확인\n  const getUser = useUserId(\"/auth\");\n  const { userId, loading } = getUser;\n  const { admin } = userId;\n  // userLogout\n  const [logout, setLogout] = useState(false);\n\n  const onClick = () => {\n    const userLogout = async () => {\n      try {\n        await Axios.post(\"/auth/logout\");\n        setLogout(true);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    userLogout();\n  };\n\n  if (logout) {\n    return (window.location.href = \"/\");\n  }\n  if (!loading) {\n    return (\n      <div className=\"loading__title\">로딩중입니다. 잠시만 기다려주세요^^</div>\n    );\n  }\n  return (\n    <>\n      <>\n        <Nav\n          userId={userId}\n          logout={logout}\n          onClick={onClick}\n          width={width}\n          onChange={onChange}\n          admin={admin}\n        ></Nav>\n        <Switch>\n          <Route exact path={routes.home} component={Home}></Route>\n          <Route path={routes.register} component={Register}></Route>\n          <Route path={routes.login} component={Login}></Route>\n          <Route path={routes.portfolio} component={Portfolio}></Route>\n          <Route path={routes.post} component={Post}></Route>\n          <Route path={routes.about} component={About}></Route>\n          <Route path=\"/postdetail/:id\" component={PostDetail}></Route>\n          <Route path={\"/edit/:id\"} component={PostEdit} />\n          {userId ? (\n            <Route path={routes.postwriting} component={PostWriting}></Route>\n          ) : (\n            <Route path={routes.postwriting}>\n              <h3 className=\"error__title\">\n                로그인을 하셔야 포스팅을 하실 수 있습니다.\n              </h3>\n            </Route>\n          )}\n          <Route path=\"/portdetail/:id\" component={PortDetail} />\n          {admin ? (\n            <Route path=\"/portedit/:id\" component={PortEdit} />\n          ) : (\n            <div className=\"error_title\">관리자가 아닙니다.</div>\n          )}\n\n          {admin ? (\n            <Route path={routes.portwriting} component={PortWriting} />\n          ) : (\n            <div className=\"error_title\">관리자가 아닙니다. </div>\n          )}\n          <Route component={NotFound} />\n        </Switch>\n      </>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createAction, handleActions } from \"redux-actions\";\n\nexport const green = createAction(\"green\");\nexport const red = createAction(\"red\");\nexport const blue = createAction(\"blue\");\n\nconst initialState = { backgroundColor: \"\" };\n\nconst reducer = handleActions(\n  {\n    [green]: (state, action) => ({\n      ...state,\n      backgroundColor: \"#00b894\",\n    }),\n    [red]: (state, action) => ({\n      ...state,\n      backgroundColor: \"#d63031\",\n    }),\n    [blue]: (state, action) => ({\n      ...state,\n      backgroundColor: \"#0984e3\",\n    }),\n  },\n  initialState\n);\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./reset.scss\";\n\n// reducer\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducer from \"./modules/reducer\";\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/3.2c9f609b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/home.bba894a8.jpg\";"],"sourceRoot":""}